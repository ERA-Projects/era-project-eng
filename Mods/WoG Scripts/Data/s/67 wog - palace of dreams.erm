ZVSE2

**   Palace of Dreams Version 1.4a created by Timothy E. Pulver
**   with message box optimization by Tobyn (version 1.4a)
**   Requires WoG version 3.57 or later using ERM version 2.6 or later.
**   WoGify Name: script11.erm
**   Updated: June 16, 2004
**   Updated: Dec 2022 by Archer30

** This script lets any "Big Turreted Palace" on a map function as a casino
** named "The Palace of Dreams", which is filled with slot machines. The
** cost to play is 100 gold coins per game. The game simulates slot machines
** with three wheels that spin around randomly. There are two types of
** machine to choose from -- On the wheels of one are images of the
** standard seven Heroes resources (including gold). If all three of the
** wheels come up the same picture, the player wins resources of that type.
** The prizes get higher later in the game as a balancing factor. The
** slot machines in the Palace of Dreams casino can be played as often
** as the player wishes, or at least until he or she runs out of money...

** The other type of machine is artifacts - randomly chosen. The chances
** of getting three of the same type from over 100 artifacts is very small
** so the game is rigged in the player's favour -- he or she can expectmi
** to win (on average) about 1 random artifact for every 4,000 gold spent.

** Each time the Palace of Dreams is visited (or revisited), 400 movement
** points are removed from the hero, however, once playing one type of
** slot machine or the other, he or she can continue to play until he/she
** runs out of gold.

** This version of the script also adds AI support -- the AI can visit
** the casino and gamble a bit (random response to dialogs) but won't
** often visit because it's not a standard object. In fact, the AI may
** not visit at ALL unless forced to travel through the entrance square
** to reach something of value, but the code's in there just in case.

** Version 1.2 also restricts artifacts to those that are enabled.
** This means that combination artifacts will *not* normally show up,
** but will show up if the mapmaker has enabled them. Also, relics
** have a reduced chance of showing up. The new WoG artifacts will
** show up only if enabled with ERM code. The chance of winning
** resources has been slightly increased in this version as well,
** but the amounts have been slightly lowered.

** Version 1.3 adds support for Commander artifacts and fixes a
** bug that was sometimes causing the game to crash during extended
** visits to the Palace of Dreams.

** Version 1.4 makes a minor adjustment to the chance of getting a
** resource prize (it's slightly less likely but not much change) and
** changes the recursive function call to a non-recursive DO function loop.

** Version 1.4a (Tobyn mod) uses same messagebox where wheel results are
** displayed to ask if player wants to play again.

** The "Big Turreted Palace" is a new WoG object that can be found in the
** WoG Heroes map editor in the Town Objects section. It's the 9th object
** below the Random Town and immediately below a big purple mushroom.
** It appears as a large palace with turrets (not to be confused with the other
** new large palaces, which may or may not have turrets).

** To install this script in a map, simply copy & paste the code into a global
** (timed) event. Copy the entire code, from ZVSE to the end. Make sure
** that you disable ALL colours from receiving the event and/or change
** the event day to something like 500 or later to avoid the ERM script
** popping up as if it were a regular event message. The title of the event
** is unimportant, but I would suggest something like "Palace of Dreams".
** And of course, you'll also need to put one or more "Big Turreted Palaces"
** on your map for the heroes to visit. Get three and WIN! :-)

** Since the script is now using ZVSE2, it would be a little bit tedious to be
** installed in a map.

Flags Used in this Script: 1-3
Variables Used in this Script: v1-v2,v101-v111,z1,z3-z6,z450

 [Set object's hint text]
!#UN:P11/?v1; [Check if script is enabled: v1]
!#VRz450&v1=1:Sz111001;
!#HT(OBJ_NEW_WOG_OBJECTS)/33&v1=1:T450;

!?OB(OBJ_NEW_WOG_OBJECTS)/33;  [Triggers when any object type 63, subtype 33 is visited]

!!UN:P11/?y-1; [Check if script is enabled: y-1]
!!FU&y-1=0:E; [Exit if script isn't enabled]


!!FU(WOG_GetRandomSeedByCoord):Pv998/v999/v1000/?(newSeed:y);

!!PO998:V0/?(value:y);
!!VR(newSeed):+(value) +i^timerWeek^;
!!FU(WOG_SetRandomSeed):P(newSeed)/?(oldSeed:y);

!!HE(CURRENT_HERO):B0/?z1;  [Store hero's name in z1]

 [Welcome hero]
!!IF&1000:Q1/4/0/4/0/4/0/1/z111002;

 [Check if hero has enough movement left to play]
!!HE(CURRENT_HERO):W>300;
!!IF&1:V3/0;
!!IF&-1:V3/1;
!!IF&3/1000:M1/z111003;

 [Remove 400 movement points from hero]
!!HE(CURRENT_HERO)&-3:Wd-300;

 [Alter artifact names/descriptions of two artifacts for use in dialogue box]
!!VRz3:Sz111004;
!!VRz4:Sz111005;
!!VRz5:Sz111006;
!!VRz6:Sz111007;
!!UN:A112/9/3 A112/10/4 A79/9/5 A79/10/6;

 [Ask if hero wants to play for artifacts or resources]
!!IF&1000/-3:Q1/8/79/8/112/7/z111008;

!!VRv106&1:S2; [Artifacts Slot Machine]
!!VRv106&-1:S1;  [Resource Slot Machine]

[Restore artifact names/descriptions to original values]
!!UN:A112/9/0 A112/10/0 A79/9/0 A79/10/0;

---------------------------------------------------------------------------------

 [Ask if hero wants to play slot machine]
!!IF&1000/-3:Q1/36/100/2/z111009;

 [Generate AI Response - number from 0 to 1]
!!if&-1000;
  !!VRv105:R0/0/1;
  !!IF&v105=0:V1/0;
  !!IF&v105=1:V1/1;
!!en;

 [IF hero doesn't have enough movement, don't let him/her play]
!!IF&3:V1/0;

 [Check if player has enough gold to play]
!!OW:R(CURRENT_PLAYER)/(RES_GOLD)/?v1;
!!IF&1/v1<100/1000:M1/z111010;

 [If player plays slot machine, call function loops 777 or 778]
 [Maximum of 100 games each]
!!if&1/v1>99;
  !!if&v106=1;
    !!DO(WOG_11_Resources)/1/100/1:P;
  !!el;
    ; Generate random artifacts and store in v101 - v103
    !!FU(NewIntArray):P?(validArtifactList:y);
    !!FU(GetMaxArtifactId):P?(lastArt:y);

    !!re i/(ART_CENTAUR_AXE)/(lastArt);
      !!co|i=(ART_HIGHLIGHTED_SLOT)/i=(ART_ARTIFACT_LOCK);

      ; Check if the artifact is disabled
      !!UN:Ai/?(isDisabled:y);

      !!if&(isDisabled)<>(TRUE);
        ; Check if the artifact is an "usual" artifact
        !!UN:Ai/3/?(artLevel:y);

        !!FU(Array_Push)&(artLevel)>(ART_LEVEL_SPECIAL):P(validArtifactList)/i;
      !!en;
    !!en;

    ; Execute 100 times before getting tired
    !!DO(WOG_11_Artifacts)/1/100/1:P(validArtifactList);
  !!en;
  !!PO998:V0/d1;
  !!FU(WOG_SetRandomSeed):P(oldSeed:y);

!!en;

!!if&1000;
   [Alter artifact names/descriptions of magic gold artifacts]
  !!VRz3:Sz111011;
  !!VRz4:Sz111012;
  !!UN:A115/9/3 A115/10/4 A116/9/3 A116/10/4 A117/9/3 A117/10/4;

   [If player doesn't play, display this message]
  !!IF:Q1/8/117/8/116/8/115/1/z111013;

   [Restore magic gold artifact text]
  !!UN:A115/9/0 A115/10/0 A116/9/0 A116/10/0 A117/9/0 A117/10/0;
!!en;

---------------------------------------------------------------------------------

!?FU(WOG_11_Resources);  [Start of main function - Resources]
!!OW:R(CURRENT_PLAYER)/(RES_GOLD)/d-100;  [Reduce player's gold by 100]
!!UN&(ERM_FLAG_IS_HUMAN):R2;

 [Set flag 2 (win flag) to false and generate 3 random numbers 0 - 6]
!!IF:V2/0;

!!VR(lastRes:y):S(RES_GOLD);
!!UN:P36/?(wogOption:y);
!!VR(lastRes)&(wogOption):S(RES_MITHRIL);

!!re i/101/103;
  !!VRvi:R0/0/(lastRes);
!!en;

 [Chance of ever getting 3 resources the same is low so this increases it a bit]
!!VRv107:R0/0/15;
!!VRv101&v107=0:Sv103;
!!VRv107:R0/0/15;
!!VRv102&v107=0:Sv101;
!!VRv107:R0/0/15;                       [Here we use both VR:R and VR:T to make the result "more random" - now use VR:R as daemon doesn't like it]
!!VRv103&v107=0:Sv102;


* Tobyn mod: optimized to use same box where wheels are displayed for question to play again

 [If all resource pictures are the same, hero WON! :-)  -- set flag 2 to true]
!!IF&v101=v102/v101=v103:V2/1;

 [If hero won, determine prize -- prizes are higher later in the game]
!!VRv104&2/v101<>(RES_GOLD):Sc0 :7 +4 R4;
!!VRv104&2/v101=(RES_GOLD):Sc0 *100 +4000 R100;

 [Give prize winning player his or her prize]
!!OW&2:R(CURRENT_PLAYER)/v101/dv104;

!!if&1000;
   [Show what came up if won -- 3 resource pictures]
  !!if&2;
    !!IF:Q1/v101/0/v102/v104/v103/0/2/z111014;
    !!UN:R2;

   [Show what came up if not won -- 3 resource pictures]
  !!el;
    !!IF:Q1/v101/0/v102/0/v103/0/2/z111015;
  !!en;
   [Generate AI Response - number from 0 to 1]
!!el;
  !!VRv105:R0/0/1;
  !!IF&v105=0:V1/0;
  !!IF&v105=1:V1/1;
!!en;

 [Check if player has enough gold to play again]
!!OW:R(CURRENT_PLAYER)/(RES_GOLD)/?v1;
!!IF&1/v1<100/1000:M1/z111016;
!!VRx16&1/v1<100:S101; [Exit DO loop]

 [If player has played 100 games, display this instead]
!!IF&1/v1>=100/x16>=100/1000:M1/z111017;

 [If player doesn't play again, exit function loop 777]
!!VRx16&-1:S101; [Exit DO loop]

---------------------------------------------------------------------------------

!?FU(WOG_11_Artifacts);  [Start of main function - Artifacts]
!#VA(validArtifactList:x);

!!OW:R(CURRENT_PLAYER)/(RES_GOLD)/d-100;  [Reduce player's gold by 100]
!!UN&(ERM_FLAG_IS_HUMAN):R2;

 [Set flag 2 (win flag) to false and generate 3 random numbers 7 - 143
  disabled artifacts are skipped]
!!IF:V2/0;

!!SN:M(validArtifactList)/?(size:y);
!!VR(lastIndex:y):S(size) -1;

!!re i/101/103;
  !!re j/0/1;                           [50% generates the second time for Reliec artifacts, unless the condition is not met]
    !!if&i=102;
      !!VR(index:y):R0/0/(lastIndex);   
    !!el;
      !!VR(index):R0/0/(lastIndex);     [Here we use both VR:R and VR:T to make the result "more random" - now use VR:R as daemon doesn't like it]
    !!en;

    !!SN:M(validArtifactList)/(index)/?vi;

    ; Check if we need to reroll
    !!UN:Avi/3/?(artLevel:y);

    !!if&(artLevel)=(ART_LEVEL_RELIC);  [50% chance of relic being "rerolled"]
      !!VR(random:y):R0/0/1;

      !!br&(random)=0;
    !!el;
      !!br;
    !!en;
  !!en;
!!en;

 [Chance of getting 3 artifacts the same is miniscule so this increases it a bit]
; Max random number is generated by the number of valid artifacts. By default it is 8, with every 100 artifacts in the pool it reduces 1, min at 4.
!!VR(maxRandom:y):S(size) :100 *-1 +8 F4/8;
!!VRv107:R0/0/(maxRandom);
!!VRv101&v107=0:Sv103;
!!VRv107:R0/0/(maxRandom);              [Here we use both VR:R and VR:T to make the result "more random" - now use VR:R as daemon doesn't like it]
!!VRv102&v107=0:Sv101;
!!VRv107:R0/0/(maxRandom);
!!VRv103&v107=0:Sv102;

 [Temporarily remove names from artifact pictures]
!!VRz3:Sz111018;
!!UN:Av101/9/3 Av102/9/3 Av103/9/3;


* Tobyn mod: optimized to use same box where wheels are displayed for question to play again

 [If all artifact pictures are the same, hero WON! :-)  -- set flag 2 to true]
!!IF&v101=v102/v101=v103:V2/1;

 [Give prize winning player his or her prize]
!!HE(CURRENT_HERO)&2:Av101;


 [If player won, give this message]
!!IF&2/1000:Q1/8/v101/8/v102/8/v103/2/z111019;


 [Show what came up with no win -- 3 artifact pictures]
!!IF&-2/1000:Q1/8/v101/8/v102/8/v103/2/z111020;


 [Restore names of artifact pictures]
!!UN:Av101/9/0 Av102/9/0 Av103/9/0;


 [Generate AI Response - number from 0 to 1]
!!VRv105&-1000:S0 R1;
!!IF&v105=0/-1000:V1/0;
!!IF&v105=1/-1000:V1/1;

 [Check if player has enough gold to play again]
!!OW:R(CURRENT_PLAYER)/(RES_GOLD)/?v1;
!!IF&1/v1<100/1000:M1/z111021;
!!VRx16&1/v1<100:S101; [Exit DO loop]

 [If player has played 100 games, display this instead]
!!IF&1/v1>=100/x16>=100/1000:M1/z111022;

 [If player doesn't play again, exit function loop 778]
!!VRx16&-1:S101; [Exit DO loop]

** End of Script **
