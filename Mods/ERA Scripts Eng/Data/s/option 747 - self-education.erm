ZVSE2
** Author orig.  : Algor
** Rewritten by  : daemon_n and Archer30 on 08 Aug 2022
** Name          : Self-education
** Name rus.     : Самообучение
** Options       : 747

** Герои с неизрасходованными очками передвижения тратят их на самообучение, получая опыт.
** Самообучение возможно при нахождении в гарнизоне города (не для гостевого героя) с отстроенными "образовательными учреждениями"
** К "образовательным учреждениям" оносятся:
** Гильдия магии (каждый уровень отдельно) - 5% неизрасходованных ОД переходит в опыт
** Библиотека (Башня) - 5%
** Академия боевых искусств (Темница) - 5%
** Университет магии (Сопряжение) - 5%
** Все проценты суммируются.
** Вторичный навык "Обучение" позволяет герою заниматься образованием даже вне города, переводит 10/20/30% ОД в опыт
** и увеличивает эффективность "образовательных зданий" до 6/7/8% (на 20/40/60%).

** Прим: самообучение отключается, если в игре всего один игрок


// Initialization
!?FU(OnAfterErmInstructions);
  !!UN:P747/?(wogOption:y);
  !!FU&(wogOption)<>(TRUE):E;

  ; Change the description of Learning
  !!re i/(SKILL_BASIC)/(SKILL_EXPERT);
    !!SN:H^secskill^/(SKILL_LEARNING)/i/?(desc:z);
    !!VR(percent:y):Si *10;
    !!SN:T^es.747.desc^/?(newDesc:z)/^percent^/(percent);
    !!SN:H^secskill^/(SKILL_LEARNING)/i/^%(desc)%(newDesc)^;
  !!en;

// Calculate and give exp to heroes on every turn of every player
!?FU(ES_EndOfTurn_AfterAutoSave); in order to load game and reassign hero's employment
  ; Exit if the option self-learning is not enabled
  !!UN:P747/?(wogOption:y);
  !!FU&(wogOption)<>(TRUE):E;

  ; Check if there is only one player in the game. Skip giving exp if it does
  !!VR(counter:y):S0;

  !!re i/(PLAYER_FIRST)/(PLAYER_LAST);
    !!OW:Ii/d/?(isDead:y);
    !!VR(counter)&(isDead)<>(TRUE):+1;

    !!br&(counter)>=2;
  !!en;

  !!FU&i>(PLAYER_LAST):E;

  ; Set up max level / exp to be used later
  !!UN:J1/?(maxLevel:y)/d;              [Note: Level limit is 0 by default, if there is no limit]
  !!FU(ES_GetExpRequirementOfLevel)&(maxLevel)>0:P(maxLevel)/?(maxExp:y);

  ; Check towns for hereos in the garrison. If the garrison has no hero, try to use the hero visiting
  ; Learning in a town is available for everyone, including those not learned Learning
  !!OW:Wi^timerOwner^/?(townsNum:y);

  !!if&(townsNum)>0;
    !!re i/0/(townsNum)/1/-1;
      !!OW:Wi^timerOwner^/i/?(townId:y);
      !!CA0/(townId):H0/?(hero:y) T?(townType:y);

      ; Check for the visiting hero if the garrison has no hero
      !!CA0/(townId)&(hero)=(NO_HERO):H1/?(hero);

      !!if&(hero)<>(NO_HERO);
        !!HE(hero):S(SKILL_LEARNING)/?(skill:y) W?(movement:y)/1 E?(exp:y)/?(level:y)/1; 
        !!co&(maxLevel)>0/(level)>=(maxLevel); [active only when the hero has not yet reach the level limit of the scenario. Note: Level limit is 0 by default.]

        !!if&(movement)>0;
          !!VR(buildEfficiency:y):S(skill) +5; [5% to *%8 per building depending on learning level]
          !!VR(totalBuildEffect:y):S0;

          ; Check Mage Guilds
          !!re j/0/4;
            !!CA0/(townId):B3/j;

            !!if&1;
              !!VR(totalBuildEffect):+(buildEfficiency);
            !!el;
              !!br;
            !!en;
          !!en;

          ; Check Library for Tower
          !!if&(townType)=(TOWN_TOWER);
            !!CA0/(townId):B3/22;
            !!VR(totalBuildEffect)&1:+(buildEfficiency);
          ; Check Battle Scholar Academy for Dungeon
          !!el&(townType)=(TOWN_DUNGEON);
            !!CA0/(townId):B3/23;
            !!VR(totalBuildEffect)&1:+(buildEfficiency);
          ; Check Magic University for Conflux
          !!el&(townType)=(TOWN_CONFLUX);
            !!CA0/(townId):B3/21;
            !!VR(totalBuildEffect)&1:+(buildEfficiency);
          !!en;

          !!VR(skill):*10 +(buildEfficiency);
          !!VR(bonusExp:y):S(movement) :100 *(skill);
          !!VR(exp):+(bonusExp);

          ; Fix exp if there is a level limit in the scenario
          !!VR(exp)&(maxLevel)>0:F0/(maxExp);

          !!HE(hero):E(exp) W0/1;       [Set movement points to 0 so the hero won't be calculated again in the next loop]
        !!en;
      !!en;
    !!en;
  !!en;

  ; Check active heroes (heroes outside of towns)
  ; Skip heroes that has added exp in the town hero loop by checking hero's current movement points
  ; Learning outside of a town is only available for hero who master Learning
  !!OW:Hi^timerOwner^/1;

  !!FU(ES_GetPlayerActiveHeroesList):Pi^timerOwner^/?(activeHeroList:y);
  !!SN:M(activeHeroList)/?(size:y);

  !!if&(size)>0;
    !!re i/0/(size)/1/-1;
      !!SN:M(activeHeroList)/i/?(hero:y);

      !!HE(hero):S(SKILL_LEARNING)/?(skill:y) W?(movement:y)/1 E?(exp:y)/?(level:y)/1; 
      !!co&(maxLevel)>0/(level)>=(maxLevel); [active only when the hero has not yet reach the level limit of the scenario. Note: Level limit is 0 by default.]

      !!if&(skill)>(SKILL_NOT_LEARNED)/(movement)>0;
        !!VR(skill):*10;
        !!VR(bonusExp:y):S(movement) :100 *(skill);
        !!VR(exp):+(bonusExp);

        ; Fix exp if there is a level limit in the scenario
        !!VR(exp)&(maxLevel)>0:F0/(maxExp);

        !!HE(hero):E(exp) W0;           [spend all the movement points]
      !!en;
    !!en;
  !!en;
