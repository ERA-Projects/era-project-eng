ZVSE2
** Author orig.  : Algor
** Rewritten by  : Archer30
** Name          : Neutral neighborhood
** Name rus.     : Нейтралы-соседи
** Options       : 778

; This script must be executed after WoG object repalcements


!?FU(OnEveryDay)&i^timerOnce^/i^timerDay^=1;
!!UN:P778/?(wogOption:y);
!!FU&(wogOption)<>(TRUE):E;

; loop through all the type 1 external dwellings
!!VR(x:y):S-1;

!!re i;
  !!UN:U(OBJ_CREATURE_GENERATOR_1)/(ANY_OBJ)/-1/(x)/(y:y)/(z:y);
  !!br&(x)<0;

  ; Initialization
  !!VR(dwellMons[9]:y):C0/0/0/0/0/0/0/0/0;

  ; Check the type of monsters available in the dwelling
  !!DW(x)/(y)/(z):M0/?(type:y)/?(num:y);

  ; Set up extra monsters in the remaininng slots with array
  !!VR(dwellMons)&(type)=(MON_HALFLING):C(MON_PEASANT)/0/0/25/0/0/0/0/0;
  !!VR(dwellMons)&(type)=(MON_PEASANT):C(MON_HALFLING)/0/0/15/0/0/0/0/0;
  !!VR(dwellMons)&(type)=(MON_BOAR):C(MON_NOMAD)/(MON_ROGUE)/0/7/8/0/0/0/0;
  !!VR(dwellMons)&(type)=(MON_NOMAD):C(MON_BOAR)/(MON_ROGUE)/0/8/8/0/0/0/0;
  !!VR(dwellMons)&(type)=(MON_ROGUE):C(MON_BOAR)/(MON_NOMAD)/0/8/7/0/0/0/0;
  !!VR(dwellMons)&(type)=(MON_MUMMY):C(MON_WEREWOLF)/0/0/4/0/0/0/0/0;
  !!VR(dwellMons)&(type)=(MON_WEREWOLF):C(MON_MUMMY)/0/0/7/0/0/0/0/0;
  !!VR(dwellMons)&(type)=(MON_SHARPSHOOTER):C(MON_ARCTIC_SHARPSHOOTER)/(MON_LAVA_SHARPSHOOTER)/0/3/3/0/9/9/0;
  !!VR(dwellMons)&(type)=(MON_ARCTIC_SHARPSHOOTER):C(MON_SHARPSHOOTER)/(MON_LAVA_SHARPSHOOTER)/0/4/3/0/0/9/0;
  !!VR(dwellMons)&(type)=(MON_LAVA_SHARPSHOOTER):C(MON_SHARPSHOOTER)/(MON_ARCTIC_SHARPSHOOTER)/0/4/3/0/0/9/0;
  !!VR(dwellMons)&(type)=(MON_ENCHANTER):C(MON_SORCERESS)/(MON_WAR_ZEALOT)/0/2/2/0/6/6/0;
  !!VR(dwellMons)&(type)=(MON_SORCERESS):C(MON_ENCHANTER)/(MON_WAR_ZEALOT)/0/2/2/0/6/6/0;
  !!VR(dwellMons)&(type)=(MON_WAR_ZEALOT):C(MON_ENCHANTER)/(MON_SORCERESS)/0/2/2/0/6/6/0;
  !!VR(dwellMons)&(type)=(MON_HELL_STEED):C(MON_NIGHTMARE)/0/0/2/0/0/6/0/0;
  !!VR(dwellMons)&(type)=(MON_NIGHTMARE):C(MON_HELL_STEED)/0/0/2/0/0/6/0/0;
  !!VR(dwellMons)&(type)=(MON_GORYNYCH):C(MON_TROLL)/0/0/3/0/0/9/0/0;

  ; Set up available monsters
  !!DW(x)/(y)/(z)&(dwellMons[3])>0:M1/(dwellMons[0])/(dwellMons[3]);
  !!DW(x)/(y)/(z)&(dwellMons[4])>0:M2/(dwellMons[1])/(dwellMons[4]);
  !!DW(x)/(y)/(z)&(dwellMons[5])>0:M3/(dwellMons[2])/(dwellMons[5]);

  ; Set up guards
  !!DW(x)/(y)/(z)&(dwellMons[6])>0:G1/(dwellMons[0])/(dwellMons[6]);
  !!DW(x)/(y)/(z)&(dwellMons[7])>0:G2/(dwellMons[1])/(dwellMons[7]);
  !!DW(x)/(y)/(z)&(dwellMons[8])>0:G3/(dwellMons[2])/(dwellMons[8]);
!!en;

** end
